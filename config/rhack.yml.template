# By default, Scout uses randomly chosen ua (string from specified fiel)
# for User-Agent header
useragents: 
  desktop: config/uas.txt
  mobile: config/uas.mobile.txt

# Options for RMTools::Logger. The logger will be initialized as RHACK::L constant
logger:
  :out: log/rhack.log
  :color_log: true

scout:
  timeout: 60
  # Curl::Error subclasses names for <domain> that will retrigger Scout#load!
  # By default an error will keep Scout from having request done
  retry:
    example.com:
    - TimeoutError
  # Path to cacert needed to use SSL. 
  # Defaults ("") to that of http://curl.haxx.se/ca/cacert.pem being stored next to this file
  cacert: ""

# Defaults to a file @ RAILS_PATH/config/RAILS_ENV.yml
# Rhack is intended to use a database only for caching,
# so I've came to a conclusion that Redis is the most suitable choice
# redis.conf can be generated using `rake redis:config`
# Delete this block to disable Redis connection at all 
db:
  redis:
    configfilename: config/redis.conf
    socket: tmp/sockets/redis.socket
    port: 0
    hostname: localhost
    dbfilename: db/redis-dump.rdb
    db: 0
    save:
    # "run BGSAVE every minute if anything have changed"
    - 60 1
    # You can change it to whatever you want and just use Redis#bgsave before exit Ruby
  